{"version":3,"sources":["constants/routes.ts","interfaces/components/jioForm.ts","components/header/Header.tsx","components/statisticCard/StatisticCard.tsx","components/statisticList/StatisticList.tsx","routes/home/Home.tsx","components/alert/Alert.tsx","utils/jioUtils.ts","components/jioForm/JioForm.tsx","routes/jios/create/CreateJio.tsx","utils/alertUtils.ts","app/AuthenticatedApp.tsx"],"names":["ROOT","LOGIN","SIGNUP","UNAUTHED_ROUTES","HOME","JIO","CREATE","JioFormMode","Header","logout","useAuth","jios","name","description","href","icon","UserAddIcon","CursorClickIcon","ViewGridIcon","callsToAction","PlayIcon","resources","CogIcon","PhoneIcon","classNames","classes","filter","Boolean","join","className","open","src","alt","Button","aria-hidden","Group","as","show","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","static","map","item","type","onClick","focus","StatisticCard","title","statistic","StatisticList","stat","Home","user","useUser","Alert","isAlertOpen","alertHeader","alertMessage","hasConfirm","closeHandler","confirmHandler","cancelHandler","cancelButtonRef","useRef","Root","initialFocus","onClose","Child","Overlay","Title","ref","jioFormVerification","mode","state","jio","closeAt","orderLimit","paymentNumber","EDIT","JioForm","alertCallback","cancelCallback","history","useHistory","useError","hasError","setHasError","useReducer","s","a","Date","setState","handleAdd","AuthService","getUser","ApiService","post","status","push","console","log","handleEdit","patch","id","window","scrollTo","top","behavior","onSubmit","event","preventDefault","value","htmlFor","required","onChange","e","target","TimePicker","clearable","ampm","time","parseInt","undefined","NEW","renderButtons","style","marginTop","visibility","CreateJio","isLoading","isError","getAlertCallback","redirectToRoot","to","redirectToHome","App","pathname","useLocation","useEffect","exact","path","render","component"],"mappings":"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","file":"static/js/5.b4c97fab.chunk.js","sourcesContent":["export const ROOT = '/';\n\n// Unauthed routes\nexport const LOGIN = '/login';\nexport const SIGNUP = '/signup';\nexport const UNAUTHED_ROUTES = [LOGIN];\n\nexport const HOME = '/home';\nexport const JIO = '/jios';\n\nexport const CREATE = '/create';\n","export enum JioFormMode {\n  EDIT = 'EDIT',\n  NEW = 'NEW',\n}\n","import React, { Fragment } from 'react';\nimport { Popover, Transition } from '@headlessui/react';\nimport {\n  CogIcon,\n  CursorClickIcon,\n  MenuIcon,\n  PhoneIcon,\n  PlayIcon,\n  UserAddIcon,\n  ViewGridIcon,\n  XIcon,\n} from '@heroicons/react/outline';\nimport { ChevronDownIcon } from '@heroicons/react/solid';\n\nimport { CREATE, HOME } from 'constants/routes';\nimport { useAuth } from 'contexts/AuthContext';\n\nconst Header: React.FC = () => {\n  const { logout } = useAuth();\n\n  const jios = [\n    {\n      name: 'Create OpenJio',\n      description: 'Create a new OpenJio',\n      href: `${CREATE}`,\n      icon: UserAddIcon,\n    },\n    {\n      name: 'Join OpenJio',\n      description: 'Join an existing OpenJio',\n      href: '#',\n      icon: CursorClickIcon,\n    },\n    {\n      name: 'View Past OpenJios',\n      description: 'View currently joined jios and orders',\n      href: '#',\n      icon: ViewGridIcon,\n    },\n  ];\n  const callsToAction = [{ name: 'Watch Tutorial', href: '#', icon: PlayIcon }];\n  const resources = [\n    {\n      name: 'Manage my Account',\n      description: 'View and edit account details and payment number.',\n      href: '#',\n      icon: CogIcon,\n    },\n    {\n      name: 'Contact Us',\n      description: 'Need help or found a bug? Contact us.',\n      href: '#',\n      icon: PhoneIcon,\n    },\n  ];\n\n  function classNames(...classes: string[]) {\n    return classes.filter(Boolean).join(' ');\n  }\n\n  return (\n    <header className=\"sticky top-0 z-50\">\n      <Popover className=\"relative bg-white\">\n        {({ open }) => (\n          <>\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n              <div className=\"flex justify-between items-center border-b-2 border-gray-100 py-6 md:justify-start md:space-x-10\">\n                <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n                  <a href={`${HOME}`}>\n                    <span className=\"sr-only\">Workflow</span>\n                    <img\n                      className=\"h-8 w-auto sm:h-10\"\n                      src=\"/images/hamburger.svg\"\n                      alt=\"\"\n                    />\n                  </a>\n                </div>\n                <div className=\"-mr-2 -my-2 md:hidden\">\n                  <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-orange-500\">\n                    <span className=\"sr-only\">Open menu</span>\n                    <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </Popover.Button>\n                </div>\n                <Popover.Group as=\"nav\" className=\"hidden md:flex space-x-10\">\n                  <Popover className=\"relative\">\n                    {({ open }) => (\n                      <>\n                        <Popover.Button\n                          className={classNames(\n                            open ? 'text-gray-900' : 'text-gray-500',\n                            'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500'\n                          )}\n                        >\n                          <span>OpenJio</span>\n                          <ChevronDownIcon\n                            className={classNames(\n                              open ? 'text-gray-600' : 'text-gray-400',\n                              'ml-2 h-5 w-5 group-hover:text-gray-500'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        </Popover.Button>\n\n                        <Transition\n                          show={open}\n                          as={Fragment}\n                          enter=\"transition ease-out duration-200\"\n                          enterFrom=\"opacity-0 translate-y-1\"\n                          enterTo=\"opacity-100 translate-y-0\"\n                          leave=\"transition ease-in duration-150\"\n                          leaveFrom=\"opacity-100 translate-y-0\"\n                          leaveTo=\"opacity-0 translate-y-1\"\n                        >\n                          <Popover.Panel\n                            static\n                            className=\"absolute z-10 -ml-4 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\"\n                          >\n                            <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                              <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                                {jios.map((item) => (\n                                  <a\n                                    key={item.name}\n                                    href={item.href}\n                                    className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\"\n                                  >\n                                    <item.icon\n                                      className=\"flex-shrink-0 h-6 w-6 text-orange-600\"\n                                      aria-hidden=\"true\"\n                                    />\n                                    <div className=\"ml-4\">\n                                      <p className=\"text-base font-medium text-gray-900\">\n                                        {item.name}\n                                      </p>\n                                      <p className=\"mt-1 text-sm text-gray-500\">\n                                        {item.description}\n                                      </p>\n                                    </div>\n                                  </a>\n                                ))}\n                              </div>\n                              <div className=\"px-5 py-5 bg-gray-50 space-y-6 sm:flex sm:space-y-0 sm:space-x-10 sm:px-8\">\n                                {callsToAction.map((item) => (\n                                  <div key={item.name} className=\"flow-root\">\n                                    <a\n                                      href={item.href}\n                                      className=\"-m-3 p-3 flex items-center rounded-md text-base font-medium text-gray-900 hover:bg-gray-100\"\n                                    >\n                                      <item.icon\n                                        className=\"flex-shrink-0 h-6 w-6 text-gray-400\"\n                                        aria-hidden=\"true\"\n                                      />\n                                      <span className=\"ml-3\">{item.name}</span>\n                                    </a>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          </Popover.Panel>\n                        </Transition>\n                      </>\n                    )}\n                  </Popover>\n\n                  <a\n                    href={`${HOME}`}\n                    className=\"text-base font-medium text-gray-500 hover:text-gray-900\"\n                  >\n                    Payment\n                  </a>\n\n                  <Popover className=\"relative\">\n                    {({ open }) => (\n                      <>\n                        <Popover.Button\n                          className={classNames(\n                            open ? 'text-gray-900' : 'text-gray-500',\n                            'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500'\n                          )}\n                        >\n                          <span>Account</span>\n                          <ChevronDownIcon\n                            className={classNames(\n                              open ? 'text-gray-600' : 'text-gray-400',\n                              'ml-2 h-5 w-5 group-hover:text-gray-500'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        </Popover.Button>\n\n                        <Transition\n                          show={open}\n                          as={Fragment}\n                          enter=\"transition ease-out duration-200\"\n                          enterFrom=\"opacity-0 translate-y-1\"\n                          enterTo=\"opacity-100 translate-y-0\"\n                          leave=\"transition ease-in duration-150\"\n                          leaveFrom=\"opacity-100 translate-y-0\"\n                          leaveTo=\"opacity-0 translate-y-1\"\n                        >\n                          <Popover.Panel\n                            static\n                            className=\"absolute z-10 left-1/2 transform -translate-x-1/2 mt-3 px-2 w-screen max-w-md sm:px-0\"\n                          >\n                            <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                              <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                                {resources.map((item) => (\n                                  <a\n                                    key={item.name}\n                                    href={item.href}\n                                    className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\"\n                                  >\n                                    <item.icon\n                                      className=\"flex-shrink-0 h-6 w-6 text-orange-600\"\n                                      aria-hidden=\"true\"\n                                    />\n                                    <div className=\"ml-4\">\n                                      <p className=\"text-base font-medium text-gray-900\">\n                                        {item.name}\n                                      </p>\n                                      <p className=\"mt-1 text-sm text-gray-500\">\n                                        {item.description}\n                                      </p>\n                                    </div>\n                                  </a>\n                                ))}\n                              </div>\n                            </div>\n                          </Popover.Panel>\n                        </Transition>\n                      </>\n                    )}\n                  </Popover>\n                </Popover.Group>\n                <div className=\"hidden md:flex items-center justify-end md:flex-1 lg:w-0\">\n                  <button\n                    type=\"submit\"\n                    onClick={logout}\n                    className=\"ml-8 whitespace-nowrap inline-flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-orange-600 hover:bg-orange-700\"\n                  >\n                    Logout\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <Transition\n              show={open}\n              as={Fragment}\n              enter=\"duration-200 ease-out\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"duration-100 ease-in\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Popover.Panel\n                focus\n                static\n                className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\"\n              >\n                <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n                  <div className=\"pt-5 pb-6 px-5\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <img\n                          className=\"h-8 w-auto\"\n                          src=\"/images/hamburger.svg\"\n                          alt=\"Workflow\"\n                        />\n                      </div>\n                      <div className=\"-mr-2\">\n                        <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-orange-500\">\n                          <span className=\"sr-only\">Close menu</span>\n                          <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                        </Popover.Button>\n                      </div>\n                    </div>\n                    <div className=\"mt-6\">\n                      <nav className=\"grid gap-y-8\">\n                        {jios.map((item) => (\n                          <a\n                            key={item.name}\n                            href={item.href}\n                            className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\"\n                          >\n                            <item.icon\n                              className=\"flex-shrink-0 h-6 w-6 text-orange-600\"\n                              aria-hidden=\"true\"\n                            />\n                            <span className=\"ml-3 text-base font-medium text-gray-900\">\n                              {item.name}\n                            </span>\n                          </a>\n                        ))}\n                      </nav>\n                    </div>\n                  </div>\n                  <div className=\"py-6 px-5 space-y-6\">\n                    <div className=\"grid grid-cols-2 gap-y-4 gap-x-8\">\n                      <a\n                        href={`${HOME}`}\n                        className=\"text-base font-medium text-gray-900 hover:text-gray-700\"\n                      >\n                        Payment\n                      </a>\n\n                      {resources.map((item) => (\n                        <a\n                          key={item.name}\n                          href={item.href}\n                          className=\"text-base font-medium text-gray-900 hover:text-gray-700\"\n                        >\n                          {item.name}\n                        </a>\n                      ))}\n                    </div>\n                    <div>\n                      <button\n                        type=\"submit\"\n                        onClick={logout}\n                        className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-orange-600 hover:bg-orange-700\"\n                      >\n                        Logout\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </>\n        )}\n      </Popover>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\ninterface StatisticCardProps {\n  title: string;\n  statistic: string;\n}\n\nconst StatisticCard: React.FunctionComponent<StatisticCardProps> = ({\n  title,\n  statistic,\n}) => {\n  return (\n    <div className=\"bg-white dark:bg-gray-800 md:px-8 px-4 py-4 rounded-xl shadow-md\">\n      <div className=\"flex flex-col\">\n        <p className=\"text-gray-600 dark:text-gray-300 text-md\">{title}</p>\n        <p className=\"text-black dark:text-gray-100 text-3xl font-semibold\">\n          {statistic}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default StatisticCard;\n","import React from 'react';\n\nimport StatisticCard from 'components/statisticCard';\n\nconst StatisticList: React.FunctionComponent = () => {\n  const statistics = [\n    {\n      title: 'Orders',\n      statistic: '4',\n    },\n    {\n      title: 'Total Spent',\n      statistic: '$38.20',\n    },\n    {\n      title: 'Payments Due',\n      statistic: '2',\n    },\n    {\n      title: 'Jios Opened',\n      statistic: '1',\n    },\n  ];\n\n  return (\n    <div className=\"grid lg:grid-cols-4 md:grid-cols-3 grid-cols-2 gap-4\">\n      {statistics.map((stat) => (\n        <div key={stat.title}>\n          <StatisticCard title={stat.title} statistic={stat.statistic} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default StatisticList;\n","import React from 'react';\n\nimport Header from 'components/header';\nimport StatisticList from 'components/statisticList';\nimport { useUser } from 'contexts/UserContext';\n\nconst Home: React.FC = () => {\n  const { user } = useUser();\n\n  return (\n    <div className=\"bg-gray-100 bg-cover min-h-screen\">\n      <Header />\n      <div className=\"lg:px-16 md:px-8 px-4 space-y-6 mt-6\">\n        <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">\n          Welcome, {user!.name}!\n        </h2>\n        <StatisticList />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Fragment, useRef } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { ExclamationIcon } from '@heroicons/react/outline';\n\ninterface AlertProps {\n  isAlertOpen: boolean;\n  alertHeader: string;\n  alertMessage: string;\n  hasConfirm: boolean;\n  closeHandler: () => void;\n  confirmHandler?: () => void;\n  cancelHandler?: () => void;\n}\n\nconst Alert: React.FC<AlertProps> = ({\n  isAlertOpen,\n  alertHeader,\n  alertMessage,\n  hasConfirm,\n  closeHandler,\n  confirmHandler,\n  cancelHandler,\n}) => {\n  const cancelButtonRef = useRef(null);\n\n  return (\n    <Transition.Root show={isAlertOpen} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        static\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\n        initialFocus={cancelButtonRef}\n        open={isAlertOpen}\n        onClose={closeHandler}\n      >\n        <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n            aria-hidden=\"true\"\n          >\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                <div className=\"sm:flex sm:items-start\">\n                  <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                    <ExclamationIcon\n                      className=\"h-6 w-6 text-orange-600\"\n                      aria-hidden=\"true\"\n                    />\n                  </div>\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                    <Dialog.Title\n                      as=\"h3\"\n                      className=\"text-lg leading-6 font-medium text-gray-900\"\n                    >\n                      {alertHeader}\n                    </Dialog.Title>\n                    <div className=\"mt-2\">\n                      <p className=\"text-sm text-gray-500\">{alertMessage}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {hasConfirm ? (\n                <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                  <button\n                    type=\"button\"\n                    className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-orange-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\n                    onClick={confirmHandler}\n                  >\n                    Confirm\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                    onClick={cancelHandler}\n                    ref={cancelButtonRef}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              ) : (\n                <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                  <button\n                    type=\"button\"\n                    className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-orange-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\n                    onClick={closeHandler}\n                  >\n                    Okay\n                  </button>\n                </div>\n              )}\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  );\n};\n\nexport default Alert;\n","import { JioFormMode } from 'interfaces/components/jioForm';\nimport { JioData, JioPatchData, JioPostData } from 'interfaces/models/jios';\n\nexport const jioFormVerification = (\n  mode: JioFormMode,\n  state: JioPostData | JioPatchData,\n  jio?: JioData\n): boolean => {\n  const { name, closeAt, orderLimit, paymentNumber } = state;\n  if (mode === JioFormMode.EDIT) {\n    return (\n      name !== jio!.name ||\n      closeAt !== jio!.closeAt ||\n      orderLimit !== jio!.orderLimit ||\n      paymentNumber !== jio!.paymentNumber\n    );\n  }\n  return name !== '' || orderLimit !== 0 || paymentNumber !== '';\n};\n","import React, { useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { TimePicker } from '@material-ui/pickers';\n\nimport { CREATE, JIO } from 'constants/routes';\nimport { useError } from 'contexts/ErrorContext';\nimport { JioFormMode } from 'interfaces/components/jioForm';\nimport { JioData, JioPatchData, JioPostData } from 'interfaces/models/jios';\nimport ApiService from 'services/apiService';\nimport AuthService from 'services/authService';\nimport { jioFormVerification } from 'utils/jioUtils';\n\ninterface JioFormProps {\n  mode: JioFormMode;\n  jio?: JioData;\n  cancelCallback: () => void;\n  alertCallback: (\n    isAlertOpen: boolean,\n    hasConfirm: boolean,\n    alertHeader: string,\n    alertMessage: string,\n    confirmHandler: undefined | (() => void),\n    cancelHandler: undefined | (() => void)\n  ) => void;\n}\n\nexport type JioFormState = JioPostData | JioPatchData;\n\nconst JioForm: React.FC<JioFormProps> = ({\n  mode,\n  jio,\n  alertCallback,\n  cancelCallback,\n}) => {\n  const history = useHistory();\n  const { hasError, setHasError } = useError();\n\n  const [state, setState] = useReducer(\n    (s: JioFormState, a: Partial<JioFormState>) => ({\n      ...s,\n      ...a,\n    }),\n    {\n      name: jio?.name ?? '',\n      closeAt: jio?.closeAt ?? new Date(),\n      orderLimit: jio?.orderLimit ?? 0,\n      paymentNumber: jio?.paymentNumber ?? '',\n    }\n  );\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  const handleCancel = () => {\n    if (!jioFormVerification(mode, state, jio)) {\n      cancelCallback();\n    } else {\n      alertCallback(\n        true,\n        true,\n        'Are you sure?',\n        'The information will not be saved.',\n        cancelCallback,\n        undefined\n      );\n    }\n  };\n  const handleAdd = async () => {\n    if (state.name === '') {\n      setHasError(true);\n      return;\n    }\n    setHasError(false);\n\n    try {\n      const user = await AuthService.getUser();\n      const response = await ApiService.post(`${JIO}${CREATE}`, {\n        ...state,\n        user,\n      });\n      if (response.status === 200) {\n        history.push('/');\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n      // TODO: Add error handling here\n    }\n  };\n\n  const handleEdit = async () => {\n    if (!jioFormVerification(mode, state, jio) || !jio) {\n      setHasError(true);\n      return;\n    }\n    setHasError(false);\n\n    try {\n      const response = await ApiService.patch(`${JIO}/${jio!.id}`, state);\n      if (response.status === 200) {\n        window.scrollTo({\n          top: 0,\n          behavior: 'auto',\n        });\n        await AuthService.getUser();\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log(e);\n      // TODO: Add error handling here\n    }\n  };\n\n  const renderButtons = () => {\n    switch (mode) {\n      case JioFormMode.NEW:\n        return (\n          <button\n            type=\"submit\"\n            onClick={handleAdd}\n            className=\"h-12 group relative w-full inline-flex items-center justify-center py-2 px-4 border border-transparent text-md font-medium rounded-md text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500\"\n          >\n            OpenJio\n          </button>\n        );\n      case JioFormMode.EDIT:\n        return (\n          <button\n            type=\"submit\"\n            onClick={handleEdit}\n            className=\"h-12 group relative w-full inline-flex items-center justify-center py-2 px-4 border border-transparent text-md font-medium rounded-md text-white bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500\"\n          >\n            Save Changes\n          </button>\n        );\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex justify-center bg-gray-50 bg-cover py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-sm w-full space-y-8\">\n        <div>\n          <h2 className=\"text-center text-3xl font-extrabold text-gray-900\">\n            Create <span className=\"text-orange-600\">Open</span>Jio\n          </h2>\n        </div>\n        <form className=\"mt-8 space-y-4\" onSubmit={handleSubmit}>\n          <input type=\"hidden\" name=\"remember\" value=\"true\" />\n          <div>\n            <label\n              className=\"text-gray-700 dark:text-gray-200 font-semibold\"\n              htmlFor=\"orderName\"\n            >\n              Order Name\n            </label>\n            <input\n              id=\"orderName\"\n              type=\"text\"\n              required\n              className=\"block w-full px-4 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-orange-500 focus:border-orange-500 focus:z-10 sm:text-sm\"\n              value={state.name}\n              onChange={(e) => setState({ name: e!.target.value })}\n            />\n          </div>\n          <div>\n            <label\n              className=\"text-gray-700 dark:text-gray-200 font-semibold\"\n              htmlFor=\"closeAt\"\n            >\n              Close At\n            </label>\n            <TimePicker\n              className=\"block w-full text-orange-500\"\n              clearable\n              // eslint-disable-next-line react/jsx-boolean-value\n              ampm={true}\n              value={state.closeAt}\n              onChange={(time) => setState({ closeAt: time! })}\n            />\n          </div>\n          <div>\n            <label\n              className=\"text-gray-700 dark:text-gray-200 font-semibold\"\n              htmlFor=\"username\"\n            >\n              Order Limit\n            </label>\n            <input\n              id=\"orderLimit\"\n              type=\"number\"\n              required\n              className=\"block w-full px-4 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-orange-500 focus:border-orange-500 focus:z-10 sm:text-sm\"\n              value={state.orderLimit}\n              onChange={(e) =>\n                setState({ orderLimit: parseInt(e!.target.value, 10) })\n              }\n            />\n          </div>\n          <div>\n            <label\n              className=\"text-gray-700 dark:text-gray-200 font-semibold\"\n              htmlFor=\"paymentNumber\"\n            >\n              Payment Number\n            </label>\n            <input\n              id=\"paymentNumber\"\n              type=\"text\"\n              required\n              className=\"block w-full px-4 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-orange-500 focus:border-orange-500 focus:z-10 sm:text-sm\"\n              value={state.paymentNumber}\n              onChange={(e) => setState({ paymentNumber: e!.target.value })}\n            />\n          </div>\n          <div className=\"grid grid-cols-2 gap-4 mt-4\">\n            <button\n              type=\"button\"\n              onClick={handleCancel}\n              className=\"h-12 group relative w-full inline-flex items-center justify-center py-2 px-4 border border-transparent text-md font-medium rounded-md bg-gray-200 hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500\"\n            >\n              Cancel\n            </button>\n            {renderButtons()}\n          </div>\n        </form>\n        {hasError ? (\n          <div\n            className=\"text-sm font-medium text-red-500\"\n            style={{\n              marginTop: '0.5rem',\n              visibility: hasError ? 'visible' : 'hidden',\n            }}\n          >\n            An error occured. Please try again.\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default JioForm;\n","import React, { useReducer } from 'react';\nimport { useHistory } from 'react-router';\n\nimport Alert from 'components/alert';\nimport Header from 'components/header/Header';\nimport JioForm from 'components/jioForm';\nimport { HOME } from 'constants/routes';\nimport { JioFormMode } from 'interfaces/components/jioForm';\nimport { RouteState } from 'interfaces/routes/common';\nimport { getAlertCallback } from 'utils/alertUtils';\n\ntype CreateJioState = RouteState;\n\nconst CreateJio: React.FC = () => {\n  const history = useHistory();\n\n  const [state, setState] = useReducer(\n    (s: CreateJioState, a: Partial<CreateJioState>) => ({\n      ...s,\n      ...a,\n    }),\n    {\n      isLoading: true,\n      isError: false,\n      isAlertOpen: false,\n      alertHeader: '',\n      alertMessage: '',\n      hasConfirm: false,\n      closeHandler: () => {\n        setState({ isAlertOpen: false });\n      },\n      confirmHandler: () => {\n        setState({ isAlertOpen: false });\n      },\n      cancelHandler: () => {\n        setState({ isAlertOpen: false });\n      },\n    }\n  );\n\n  const alertCallback = getAlertCallback(setState);\n\n  return (\n    <div className=\"min-h-screen  bg-gray-50\">\n      <Header />\n      <JioForm\n        mode={JioFormMode.NEW}\n        alertCallback={alertCallback}\n        cancelCallback={() => history.push(HOME)}\n      />\n      <Alert\n        isAlertOpen={state.isAlertOpen!}\n        hasConfirm={state.hasConfirm!}\n        alertHeader={state.alertHeader!}\n        alertMessage={state.alertMessage!}\n        closeHandler={state.closeHandler!}\n        confirmHandler={state.confirmHandler}\n        cancelHandler={state.cancelHandler}\n      />\n    </div>\n  );\n};\n\nexport default CreateJio;\n","import { RouteState } from 'interfaces/routes/common';\n\nexport function getAlertCallback(\n  setState: <T extends RouteState>(state: Partial<T>) => void,\n): (\n  isAlertOpen: boolean,\n  hasConfirm: boolean,\n  alertHeader: string,\n  alertMessage: string,\n  confirmHandler?: (() => void) | undefined,\n  cancelHandler?: (() => void) | undefined\n) => void {\n  const alertCallback = (\n    isAlertOpen: boolean,\n    hasConfirm: boolean,\n    alertHeader: string,\n    alertMessage: string,\n    confirmHandler?: () => void,\n    cancelHandler?: () => void,\n  ) => {\n    setState({\n      isAlertOpen,\n      hasConfirm,\n      alertHeader,\n      alertMessage,\n    });\n    if (confirmHandler) {\n      setState({\n        confirmHandler: () => {\n          confirmHandler();\n          setState({ isAlertOpen: false });\n        },\n      });\n    } else {\n      setState({ confirmHandler: () => setState({ isAlertOpen: false }) });\n    }\n    if (cancelHandler) {\n      setState({\n        cancelHandler: () => {\n          cancelHandler();\n          setState({ isAlertOpen: false });\n        },\n      });\n    } else {\n      setState({ cancelHandler: () => setState({ isAlertOpen: false }) });\n    }\n  };\n  return alertCallback;\n}\n","import React, { useEffect } from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n  useLocation,\n} from 'react-router-dom';\n\nimport { CREATE, HOME, ROOT, UNAUTHED_ROUTES } from 'constants/routes';\nimport { useError } from 'contexts/ErrorContext';\nimport Home from 'routes/home';\nimport CreateJio from 'routes/jios/create';\n\nconst redirectToRoot = (): React.ReactNode => <Redirect to={ROOT} />;\nconst redirectToHome = (): React.ReactNode => <Redirect to={HOME} />;\n\nconst App: React.FC = () => {\n  const { pathname } = useLocation();\n  const { setHasError } = useError();\n\n  useEffect(() => {\n    setHasError(false);\n  }, [pathname, setHasError]);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={UNAUTHED_ROUTES} render={redirectToRoot} />\n        <Route path={HOME} component={Home} />\n        <Route path={CREATE} component={CreateJio} />\n        <Route path=\"/\" render={redirectToHome} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}